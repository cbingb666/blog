(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{379:function(s,e,t){"use strict";t.r(e);var a=t(44),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),t("h2",{attrs:{id:"参考案例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考案例"}},[s._v("#")]),s._v(" 参考案例")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://juejin.im/post/6844903946234904583",target:"_blank",rel:"noopener noreferrer"}},[s._v("自动发布案例"),t("OutboundLink")],1)]),s._v(" "),t("li",[t("a",{attrs:{href:"https://www.cnblogs.com/zhangxingeng/p/11558782.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("私有镜像库案例"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("p",[t("a",{attrs:{href:"https://www.docker.com/get-started",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.docker.com/get-started"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"创建应用步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建应用步骤"}},[s._v("#")]),s._v(" 创建应用步骤")]),s._v(" "),t("ol",[t("li",[s._v("写一个 "),t("strong",[s._v("Dockerfile")]),s._v(" 文件")]),s._v(" "),t("li",[s._v("使用 "),t("code",[s._v("docker image build")]),s._v(" 来将 Dockerfile 打包成镜像")]),s._v(" "),t("li",[s._v("使用 "),t("code",[s._v("docker container create")]),s._v(" 来根据镜像创建一个容器")]),s._v(" "),t("li",[s._v("使用 "),t("code",[s._v("docker container start")]),s._v(" 来启动一个创建好的容器")])]),s._v(" "),t("h2",{attrs:{id:"命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打包镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基于路径./（当前路径）打包一个镜像，镜像的名字是hello-docker，版本号是1.0.0。该命令会自动寻找Dockerfile来打包出一个镜像")]),s._v("\ndocker image build ./ -t hello-docker:1.0.0\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 据镜像创建容器")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker container create来创建基于hello-docker:1.0.0镜像的一个容器，使用-p来指定端口绑定——将容器中的80端口绑定在宿主机的2333端口。执行完该命令，会返回一个容器ID")]),s._v("\ndocker container create -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2333")]),s._v(":80 hello-docker:1.0.0\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行容器 xxx 为上一条命令运行得到的结果")]),s._v("\ndocker container start xxx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器执行bash xxx 为容器ID")]),s._v("\ndocker container "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it xxx /bin/bash\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# stop停止所有容器")]),s._v("\ndocker stop "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),s._v("docker "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v(" -a -q"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n")])])]),t("h2",{attrs:{id:"linux"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux"}},[s._v("#")]),s._v(" linux")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动docker服务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker start\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止docker服务")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" docker stop\n")])])]),t("h2",{attrs:{id:"dockerfile-配置示例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile-配置示例"}},[s._v("#")]),s._v(" dockerfile 配置示例")]),s._v(" "),t("p",[s._v("官网配置 https://docs.docker.com/engine/reference/builder/"),t("br"),s._v("\n菜鸟配置 https://www.runoob.com/docker/docker-compose.html")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 来源镜像")]),s._v("\nFROM nginx\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从宿主机path复制到容器path")]),s._v("\nCOPY ./index.html /usr/share/nginx/html/index.html\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暴露80端口")]),s._v("\nEXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n")])])]),t("h2",{attrs:{id:"docker-compose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" docker-compose")]),s._v(" "),t("blockquote",[t("p",[s._v("Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用\nYML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以从 YML\n文件配置中创建并启动所有服务。")])]),s._v(" "),t("p",[s._v("官方文档 https://docs.docker.com/compose/install/#install-compose macos\n安装 docker 中已内置, 以下安装方法 for linux")]),s._v(" "),t("ul",[t("li",[s._v("下载")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://github.com/docker/compose/releases/download/1.26.2/docker-compose-'),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("-"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" -o /usr/local/bin/docker-compose\n")])])]),t("ul",[t("li",[s._v("将可执行权限应用于二进制文件")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n")])])]),t("ul",[t("li",[s._v("更新镜像和容器")])]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("docker-compose pull info\ndocker-compose stop info\ndocker-compose "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" info\ndocker-compose up -d info "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -d 代表后台运行")]),s._v("\n")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);